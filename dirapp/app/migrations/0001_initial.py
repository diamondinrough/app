# -*- coding: utf-8 -*-
# Generated by Django 1.9.7 on 2016-08-23 06:24
from __future__ import unicode_literals

import colorfield.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('summary', models.CharField(max_length=500, null=True)),
                ('image', models.ImageField(default='articles/images/noimage.png', upload_to='articles/images/')),
                ('views', models.IntegerField(default=0)),
                ('dt_created', models.DateTimeField(auto_now_add=True)),
                ('dt_updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='ArticleLink',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('link', models.URLField()),
                ('summary', models.CharField(max_length=500, null=True)),
                ('image', models.ImageField(default='articles/images/noimage.gif', upload_to='articles/images/')),
                ('views', models.IntegerField(default=0)),
                ('dt_created', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='ChildComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=200)),
                ('edited', models.BooleanField(default=False)),
                ('dt_created', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['dt_created'],
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=200)),
                ('edited', models.BooleanField(default=False)),
                ('dt_created', models.DateTimeField(auto_now_add=True)),
                ('object_id', models.PositiveIntegerField()),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
            ],
            options={
                'ordering': ['-dt_created'],
            },
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('comments', models.TextField()),
                ('contactinfo', models.CharField(max_length=200)),
                ('name', models.CharField(max_length=50)),
                ('dt_created', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='HeadOfInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Help',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('question', models.CharField(max_length=200)),
                ('detail', models.TextField()),
                ('faq', models.BooleanField(default=False)),
                ('dt_created', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='IndexSlide',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('image', models.ImageField(upload_to='index/slides/')),
                ('order', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Info',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fullname', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('wechat', models.CharField(blank=True, max_length=50)),
                ('image', models.ImageField(default='users/images/default.jpg', upload_to='users/images')),
            ],
        ),
        migrations.CreateModel(
            name='Resource',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('image', models.ImageField(upload_to='resources/images/')),
                ('title', models.CharField(max_length=200)),
                ('resourcefile', models.FileField(upload_to='resources/')),
                ('filetype', models.CharField(max_length=5)),
                ('summary', models.CharField(max_length=500, null=True)),
                ('views', models.IntegerField(default=0)),
                ('downloads', models.IntegerField(default=0)),
                ('dt_created', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('name', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('color', colorfield.fields.ColorField(default='#000000', max_length=10)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('completed', models.BooleanField(default=False)),
                ('dt_created', models.DateTimeField(auto_now_add=True)),
                ('dt_updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('description', models.TextField(blank=True)),
                ('summary', models.CharField(blank=True, max_length=300)),
                ('dt_created', models.DateTimeField(auto_now_add=True)),
                ('dt_updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=30)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('image', models.ImageField(default='users/images/default.jpg', upload_to='users/images/')),
                ('position', models.CharField(max_length=50)),
                ('wechat', models.CharField(blank=True, max_length=50)),
                ('email', models.CharField(blank=True, max_length=50)),
                ('dt_created', models.DateTimeField(auto_now_add=True)),
                ('dt_updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('videolink', models.URLField(max_length=500)),
                ('summary', models.CharField(max_length=500, null=True)),
                ('speaker', models.CharField(max_length=50, null=True)),
                ('views', models.IntegerField(default=0)),
                ('dt_created', models.DateTimeField(auto_now_add=True)),
                ('poster', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='uservideos', to=settings.AUTH_USER_MODEL)),
                ('tags', models.ManyToManyField(related_name='videotag', to='app.Tag')),
            ],
        ),
        migrations.AlterUniqueTogether(
            name='user',
            unique_together=set([('id', 'username')]),
        ),
        migrations.AddField(
            model_name='team',
            name='leader',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='teamleaders', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='team',
            name='members',
            field=models.ManyToManyField(related_name='teammembers', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='task',
            name='leader',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='taskleaders', to='app.User'),
        ),
        migrations.AddField(
            model_name='task',
            name='members',
            field=models.ManyToManyField(related_name='taskmembers', to='app.User'),
        ),
        migrations.AddField(
            model_name='resource',
            name='poster',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='userresources', to='app.User'),
        ),
        migrations.AddField(
            model_name='resource',
            name='tags',
            field=models.ManyToManyField(related_name='resourcetag', to='app.Tag'),
        ),
        migrations.AddField(
            model_name='resource',
            name='team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='teamresources', to='app.Team'),
        ),
        migrations.AddField(
            model_name='info',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='help',
            name='poster',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='helpresources', to='app.User'),
        ),
        migrations.AddField(
            model_name='help',
            name='tags',
            field=models.ManyToManyField(related_name='helptag', to='app.Tag'),
        ),
        migrations.AddField(
            model_name='headofinfo',
            name='person',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.User'),
        ),
        migrations.AddField(
            model_name='comment',
            name='poster',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comments', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='childcomment',
            name='parent',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Comment'),
        ),
        migrations.AddField(
            model_name='childcomment',
            name='poster',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='childcomments', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='articlelink',
            name='poster',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='userarticlelinks', to='app.User'),
        ),
        migrations.AddField(
            model_name='articlelink',
            name='tags',
            field=models.ManyToManyField(related_name='articlelinktag', to='app.Tag'),
        ),
        migrations.AddField(
            model_name='article',
            name='poster',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='userarticles', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='article',
            name='tags',
            field=models.ManyToManyField(blank=True, related_name='articletag', to='app.Tag'),
        ),
    ]
